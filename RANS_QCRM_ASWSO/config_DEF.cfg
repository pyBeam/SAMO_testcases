%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                              %
% SU2 configuration file                                                       %
% Case description: CRM wing in inviscid, transonic flow                  %
% Author: Enrique Castro                                                %
% Institution: University of Carlos III Madrid                                 %
% Date: 29/06/2020                                                               %
%                                                                              %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% -------------------- BOUNDARY CONDITION DEFINITION --------------------------%
%
% Navier-Stokes wall boundary marker(s) (NONE = no marker)
MARKER_HEATFLUX= ( WING, 0.0 )
%
% Far-field boundary marker(s) (NONE = no marker)
MARKER_FAR= ( FARFIELD )
%
% Symmetry boundary marker(s) (NONE = no marker)
MARKER_SYM= ( SYMMETRY )
%
% Marker(s) of the surface to be plotted or designed
MARKER_PLOTTING= ( WING )
%
% Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated
MARKER_MONITORING= ( WING )

% ------------------------ SURFACES IDENTIFICATION ----------------------------%

MARKER_DESIGNING = ( WING )

MARKER_DEFORM_MESH = ( WING )

MARKER_FLUID_LOAD = ( WING )

% --------------------------- MESH PARAMETERS ---------------------------------%
DEFORM_MESH = YES

DEFORM_LINEAR_SOLVER_PREC= ILU

% Linear solver or smoother for implicit formulations (FGMRES, RESTARTED_FGMRES, BCGSTAB)
DEFORM_LINEAR_SOLVER= FGMRES
%
% Number of smoothing iterations for mesh deformation
DEFORM_LINEAR_SOLVER_ITER= 500
%
% Minimum residual criteria for the linear solver convergence of grid deformation
DEFORM_LINEAR_SOLVER_ERROR= 1E-14
%
% Type of element stiffness imposed for FEA mesh deformation (INVERSE_VOLUME, 
%                                          WALL_DISTANCE, CONSTANT_STIFFNESS)
DEFORM_STIFFNESS_TYPE= WALL_DISTANCE


% ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%
%
% Kind of deformation (FFD_SETTING, FFD_CONTROL_POINT_2D, FFD_CAMBER_2D, FFD_THICKNESS_2D,
%                      HICKS_HENNE, COSINE_BUMP, PARABOLIC,
%                      NACA_4DIGITS, DISPLACEMENT, ROTATION, FFD_CONTROL_POINT,
%                      FFD_DIHEDRAL_ANGLE, FFD_TWIST_ANGLE, FFD_ROTATION,
%                      FFD_CAMBER, FFD_THICKNESS, FFD_CONTROL_SURFACE, SURFACE_FILE, AIRFOIL) (important in SU2_DEF to create FFDBOX )

%
%
% Marker of the surface in which we are going apply the shape deformation
DV_MARKER= ( WING )
%
% Parameters of the shape deformation   (important in SU2_DEF to create FFDBOX )
% 	- FFD_CONTROL_POINT ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp )
% 	- FFD_DIHEDRAL_ANGLE ( FFD_BoxTag, x_Orig, y_Orig, z_Orig, x_End, y_End, z_End )
% 	- FFD_TWIST_ANGLE ( FFD_BoxTag, x_Orig, y_Orig, z_Orig, x_End, y_End, z_End )
% 	- FFD_ROTATION ( FFD_BoxTag, x_Orig, y_Orig, z_Orig, x_End, y_End, z_End )
% 	- FFD_CAMBER ( FFD_BoxTag, i_Ind, j_Ind )
% 	- FFD_THICKNESS ( FFD_BoxTag, i_Ind, j_Ind )
% 	- FFD_VOLUME ( FFD_BoxTag, i_Ind, j_Ind )
DV_PARAM= (WING, 0, 0, 0, 0, 0, 1); (WING, 1, 0, 0, 0, 0, 1); (WING, 2, 0, 0, 0, 0, 1); (WING, 3, 0, 0, 0, 0, 1); (WING, 4, 0, 0, 0, 0, 1); (WING, 0, 1, 0, 0, 0, 1); (WING, 1, 1, 0, 0, 0, 1); (WING, 2, 1, 0, 0, 0, 1); (WING, 3, 1, 0, 0, 0, 1); (WING, 4, 1, 0, 0, 0, 1); (WING, 0, 2, 0, 0, 0, 1); (WING, 1, 2, 0, 0, 0, 1); (WING, 2, 2, 0, 0, 0, 1); (WING, 3, 2, 0, 0, 0, 1); (WING, 4, 2, 0, 0, 0, 1); (WING, 0, 3, 0, 0, 0, 1); (WING, 1, 3, 0, 0, 0, 1); (WING, 2, 3, 0, 0, 0, 1); (WING, 3, 3, 0, 0, 0, 1); (WING, 4, 3, 0, 0, 0, 1); (WING, 0, 4, 0, 0, 0, 1); (WING, 1, 4, 0, 0, 0, 1); (WING, 2, 4, 0, 0, 0, 1); (WING, 3, 4, 0, 0, 0, 1); (WING, 4, 4, 0, 0, 0, 1); (WING, 0, 5, 0, 0, 0, 1); (WING, 1, 5, 0, 0, 0, 1); (WING, 2, 5, 0, 0, 0, 1); (WING, 3, 5, 0, 0, 0, 1); (WING, 4, 5, 0, 0, 0, 1); (WING, 0, 6, 0, 0, 0, 1); (WING, 1, 6, 0, 0, 0, 1); (WING, 2, 6, 0, 0, 0, 1); (WING, 3, 6, 0, 0, 0, 1); (WING, 4, 6, 0, 0, 0, 1); (WING, 0, 7, 0, 0, 0, 1); (WING, 1, 7, 0, 0, 0, 1); (WING, 2, 7, 0, 0, 0, 1); (WING, 3, 7, 0, 0, 0, 1); (WING, 4, 7, 0, 0, 0, 1); (WING, 0, 8, 0, 0, 0, 1); (WING, 1, 8, 0, 0, 0, 1); (WING, 2, 8, 0, 0, 0, 1); (WING, 3, 8, 0, 0, 0, 1); (WING, 4, 8, 0, 0, 0, 1); (WING, 0, 9, 0, 0, 0, 1); (WING, 1, 9, 0, 0, 0, 1); (WING, 2, 9, 0, 0, 0, 1); (WING, 3, 9, 0, 0, 0, 1); (WING, 4, 9, 0, 0, 0, 1); (WING, 0, 0, 1, 0, 0, 1); (WING, 1, 0, 1, 0, 0, 1); (WING, 2, 0, 1, 0, 0, 1); (WING, 3, 0, 1, 0, 0, 1); (WING, 4, 0, 1, 0, 0, 1); (WING, 0, 1, 1, 0, 0, 1); (WING, 1, 1, 1, 0, 0, 1); (WING, 2, 1, 1, 0, 0, 1); (WING, 3, 1, 1, 0, 0, 1); (WING, 4, 1, 1, 0, 0, 1); (WING, 0, 2, 1, 0, 0, 1); (WING, 1, 2, 1, 0, 0, 1); (WING, 2, 2, 1, 0, 0, 1); (WING, 3, 2, 1, 0, 0, 1); (WING, 4, 2, 1, 0, 0, 1); (WING, 0, 3, 1, 0, 0, 1); (WING, 1, 3, 1, 0, 0, 1); (WING, 2, 3, 1, 0, 0, 1); (WING, 3, 3, 1, 0, 0, 1); (WING, 4, 3, 1, 0, 0, 1); (WING, 0, 4, 1, 0, 0, 1); (WING, 1, 4, 1, 0, 0, 1); (WING, 2, 4, 1, 0, 0, 1); (WING, 3, 4, 1, 0, 0, 1); (WING, 4, 4, 1, 0, 0, 1); (WING, 0, 5, 1, 0, 0, 1); (WING, 1, 5, 1, 0, 0, 1); (WING, 2, 5, 1, 0, 0, 1); (WING, 3, 5, 1, 0, 0, 1); (WING, 4, 5, 1, 0, 0, 1); (WING, 0, 6, 1, 0, 0, 1); (WING, 1, 6, 1, 0, 0, 1); (WING, 2, 6, 1, 0, 0, 1); (WING, 3, 6, 1, 0, 0, 1); (WING, 4, 6, 1, 0, 0, 1); (WING, 0, 7, 1, 0, 0, 1); (WING, 1, 7, 1, 0, 0, 1); (WING, 2, 7, 1, 0, 0, 1); (WING, 3, 7, 1, 0, 0, 1); (WING, 4, 7, 1, 0, 0, 1); (WING, 0, 8, 1, 0, 0, 1); (WING, 1, 8, 1, 0, 0, 1); (WING, 2, 8, 1, 0, 0, 1); (WING, 3, 8, 1, 0, 0, 1); (WING, 4, 8, 1, 0, 0, 1); (WING, 0, 9, 1, 0, 0, 1); (WING, 1, 9, 1, 0, 0, 1); (WING, 2, 9, 1, 0, 0, 1); (WING, 3, 9, 1, 0, 0, 1); (WING, 4, 9, 1, 0, 0, 1) 

% New value of the shape deformation  (important in SU2_DEF to create FFDBOX )
DV_VALUE= 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0

% -------------------- FREE-FORM DEFORMATION PARAMETERS -----------------------%
%
% Tolerance of the Free-Form Deformation point inversion
FFD_TOLERANCE= 1E-10
%
% Maximum number of iterations in the Free-Form Deformation point inversion
FFD_ITERATIONS= 500
%
% FFD box definition: 3D case (FFD_BoxTag, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3, X4, Y4, Z4,
%                              X5, Y5, Z5, X6, Y6, Z6, X7, Y7, Z7, X8, Y8, Z8)
%                     2D case (FFD_BoxTag, X1, Y1, 0.0, X2, Y2, 0.0, X3, Y3, 0.0, X4, Y4, 0.0,
%                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
FFD_DEFINITION= (WING,-0.403, -0.003, -2.3, 13.8, -0.003, -2.3, 25.01, 29.5, 1.6, 22, 29.5, 1.6, -0.403, -0.003, 0.8, 13.8, -0.003, 0.8, 25.01, 29.5, 3, 22, 29.5, 3)
%(FFD_BoxTag, -0.403, 0, -1.76, 13.8, 0, -1.76, 25.1, 29.5, 2.5, 22.4, 29.5, 2.5,
%                              -0.403, 0, 1, 13.8, 0, 1, 25.1, 29.5, 3, 22.4, 29.5, 3)
%
FFD_DEGREE= (4, 9, 1)
% Surface continuity at the intersection with the FFD (1ST_DERIVATIVE, 2ND_DERIVATIVE)
FFD_CONTINUITY= 2ND_DERIVATIVE

% There is a symmetry plane (j=0) for all the FFD boxes (YES, NO)
FFD_SYMMETRY_PLANE= YES

DEFINITION_DV= ( 11, 1.0 | WING | WING, 0, 0, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 0, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 0, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 0, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 0, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 1, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 1, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 1, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 1, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 1, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 2, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 2, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 2, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 2, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 2, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 3, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 3, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 3, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 3, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 3, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 4, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 4, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 4, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 4, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 4, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 5, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 5, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 5, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 5, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 5, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 6, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 6, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 6, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 6, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 6, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 7, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 7, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 7, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 7, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 7, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 8, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 8, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 8, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 8, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 8, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 9, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 9, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 9, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 9, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 9, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 0, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 0, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 0, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 0, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 0, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 1, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 1, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 1, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 1, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 1, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 2, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 2, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 2, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 2, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 2, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 3, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 3, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 3, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 3, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 3, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 4, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 4, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 4, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 4, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 4, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 5, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 5, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 5, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 5, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 5, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 6, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 6, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 6, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 6, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 6, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 7, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 7, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 7, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 7, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 7, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 8, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 8, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 8, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 8, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 8, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 0, 9, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 1, 9, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 2, 9, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 3, 9, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING, 4, 9, 1, 0.0, 0.0, 1.0 )

% ------------------------- INPUT/OUTPUT INFORMATION --------------------------%
%
% Mesh input file
MESH_FILENAME= CRM_RANS_mesh.su2
%
% Mesh output file
MESH_OUT_FILENAME= mesh_FFD_deform.su2
%
% Restart flow input file
SOLUTION_FILENAME= solution_flow
SOLUTION_ADJ_FILENAME= solution_adj

MESH_FORMAT= SU2
TABULAR_FORMAT= CSV

CONV_FILENAME= history

BREAKDOWN_FILENAME= forces_breakdown.dat

RESTART_FILENAME= restart_flow.dat
RESTART_ADJ_FILENAME= restart_adj.dat

VOLUME_FILENAME= flow
SURFACE_FILENAME= surface_flow

VOLUME_ADJ_FILENAME= adjoint
GRAD_OBJFUNC_FILENAME= of_grad.dat

SURFACE_ADJ_FILENAME= surface_adjoint

WRT_SOL_FREQ= 100
WRT_CON_FREQ= 1
