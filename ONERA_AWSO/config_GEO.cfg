%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                              %
% SU2 GEO configuration file                                                   %
% Case description: ONERA M6 wing in inviscid, transonic flow                  %
% Author: Rocco Bombardieri                                                    %
% Institution: University of Carlos III Madrid                                 %
% Date: 26/05/2020                                                             %
%                                                                              %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% ----------------------- BOUNDARY CONDITION DEFINITION -----------------------%

MARKER_EULER= ( WING )
MARKER_FAR = (XNORMAL_FACES,ZNORMAL_FACES,YNORMAL_FACES)
MARKER_SYM= ( SYMMETRY )

% ------------------------ SURFACES IDENTIFICATION ----------------------------%

MARKER_PLOTTING = ( WING )
MARKER_MONITORING = ( WING )
MARKER_DESIGNING = ( WING )

MARKER_DEFORM_MESH = ( WING )
MARKER_FLUID_LOAD = ( WING )

% ----------------------- GEOMETRY EVALUATION PARAMETERS ----------------------%
%
%
% Marker(s) of the surface where geometrical based function will be evaluated
GEO_MARKER= ( WING )
%
% Description of the geometry to be analyzed (AIRFOIL, WING, FUSELAGE)
GEO_DESCRIPTION= WING
%
% Coordinate of the stations to be analyzed
GEO_LOCATION_STATIONS= (0.0, 0.2, 0.4, 0.6, 0.8)
%
% Geometrical bounds (Y coordinate) for the wing geometry analysis or
% fuselage evaluation (X coordinate)
GEO_BOUNDS= (0, 0.8)
%
% Plot loads and Cp distributions on each airfoil section
GEO_PLOT_STATIONS= YES
%
% Number of section cuts to make when calculating wing geometry
GEO_NUMBER_STATIONS= 25
%
% Geometrical evaluation mode (FUNCTION, GRADIENT)
GEO_MODE=  GRADIENT

% ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%
%
% Kind of deformation (FFD_SETTING, FFD_CONTROL_POINT_2D, FFD_CAMBER_2D, FFD_THICKNESS_2D,
%                      HICKS_HENNE, COSINE_BUMP, PARABOLIC,
%                      NACA_4DIGITS, DISPLACEMENT, ROTATION, FFD_CONTROL_POINT,
%                      FFD_DIHEDRAL_ANGLE, FFD_TWIST_ANGLE, FFD_ROTATION,
%                      FFD_CAMBER, FFD_THICKNESS, FFD_CONTROL_SURFACE, SURFACE_FILE, AIRFOIL) (important in SU2_DEF to create FFDBOX )


%
% Marker of the surface in which we are going apply the shape deformation
DV_MARKER= ( WING )
%
% Parameters of the shape deformation   (important in SU2_DEF to create FFDBOX )
% 	- FFD_CONTROL_POINT ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp )
% 	- FFD_DIHEDRAL_ANGLE ( FFD_BoxTag, x_Orig, y_Orig, z_Orig, x_End, y_End, z_End )
% 	- FFD_TWIST_ANGLE ( FFD_BoxTag, x_Orig, y_Orig, z_Orig, x_End, y_End, z_End )
% 	- FFD_ROTATION ( FFD_BoxTag, x_Orig, y_Orig, z_Orig, x_End, y_End, z_End )
% 	- FFD_CAMBER ( FFD_BoxTag, i_Ind, j_Ind )
% 	- FFD_THICKNESS ( FFD_BoxTag, i_Ind, j_Ind )
% 	- FFD_VOLUME ( FFD_BoxTag, i_Ind, j_Ind )
DV_PARAM= ( WING_FFD, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 0.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 0.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 0.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 0.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 0.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 0.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 0.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 0.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 1.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 1.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 1.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 1.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 1.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 1.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 1.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 1.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 1.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 0.0, 2.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 2.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 2.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 2.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 2.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 2.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 2.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 2.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 2.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 2.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 2.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 0.0, 3.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 3.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 3.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 3.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 3.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 3.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 3.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 3.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 3.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 3.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 3.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 0.0, 4.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 4.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 4.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 4.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 4.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 4.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 4.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 4.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 4.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 4.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 4.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 0.0, 5.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 5.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 5.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 5.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 5.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 5.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 5.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 5.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 5.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 5.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 5.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 0.0, 6.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 6.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 6.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 6.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 6.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 6.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 6.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 6.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 6.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 6.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 6.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 0.0, 7.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 7.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 7.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 7.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 7.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 7.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 7.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 7.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 7.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 7.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 7.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 0.0, 8.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 8.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 8.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 8.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 8.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 8.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 8.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 8.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 8.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 8.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 8.0, 0.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 0.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 0.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 0.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 0.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 0.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 0.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 0.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 0.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 0.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 1.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 1.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 1.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 1.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 1.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 1.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 1.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 1.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 1.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 0.0, 2.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 2.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 2.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 2.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 2.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 2.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 2.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 2.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 2.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 2.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 2.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 0.0, 3.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 3.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 3.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 3.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 3.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 3.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 3.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 3.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 3.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 3.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 3.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 0.0, 4.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 4.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 4.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 4.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 4.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 4.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 4.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 4.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 4.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 4.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 4.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 0.0, 5.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 5.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 5.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 5.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 5.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 5.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 5.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 5.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 5.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 5.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 5.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 0.0, 6.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 6.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 6.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 6.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 6.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 6.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 6.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 6.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 6.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 6.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 6.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 0.0, 7.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 7.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 7.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 7.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 7.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 7.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 7.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 7.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 7.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 7.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 7.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 0.0, 8.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 1.0, 8.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 2.0, 8.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 3.0, 8.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 4.0, 8.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 5.0, 8.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 6.0, 8.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 7.0, 8.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 8.0, 8.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 9.0, 8.0, 1.0, 0.0, 0.0, 1.0) ; ( WING_FFD, 10.0, 8.0, 1.0, 0.0, 0.0, 1.0)

%
% New value of the shape deformation  (important in SU2_DEF to create FFDBOX, to deform mesh (SU2_GEO) and for the )



% -------------------- FREE-FORM DEFORMATION PARAMETERS -----------------------%
%
% Tolerance of the Free-Form Deformation point inversion
FFD_TOLERANCE= 1E-10
%
% Maximum number of iterations in the Free-Form Deformation point inversion
FFD_ITERATIONS= 500
%
% FFD box definition: 3D case (FFD_BoxTag, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3, X4, Y4, Z4,
%                              X5, Y5, Z5, X6, Y6, Z6, X7, Y7, Z7, X8, Y8, Z8)
%                     2D case (FFD_BoxTag, X1, Y1, 0.0, X2, Y2, 0.0, X3, Y3, 0.0, X4, Y4, 0.0,
%                              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
FFD_DEFINITION= (WING_FFD, -0.0403, 0, -0.04836, 0.8463,0, -0.04836, 1.209, 1.2896, -0.04836, 0.6851, 1.2896, -0.04836, -0.0403, 0, 0.04836, 0.8463, 0, 0.04836, 1.209, 1.2896, 0.04836, 0.6851, 1.2896, 0.04836)
%
% FFD box degree: 3D case (x_degree, y_degree, z_degree)
%                 2D case (x_degree, y_degree, 0)
FFD_DEGREE= (10, 8, 1)
%
% Surface continuity at the intersection with the FFD (1ST_DERIVATIVE, 2ND_DERIVATIVE)
FFD_CONTINUITY= 2ND_DERIVATIVE

% There is a symmetry plane (j=0) for all the FFD boxes (YES, NO)
FFD_SYMMETRY_PLANE= YES

% FFD_CONTROL_POINT (Z)   generated automatically by python set_ffd_design_var.py -i 10 -j 8 -k 1 -b WING_FFD -m 'WING'
DEFINITION_DV= ( 11, 1.0 | WING | WING_FFD, 0, 0, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 0, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 0, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 0, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 0, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 0, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 0, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 0, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 0, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 0, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 0, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 0, 1, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 1, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 1, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 1, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 1, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 1, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 1, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 1, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 1, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 1, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 1, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 0, 2, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 2, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 2, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 2, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 2, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 2, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 2, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 2, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 2, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 2, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 2, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 0, 3, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 3, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 3, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 3, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 3, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 3, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 3, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 3, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 3, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 3, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 3, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 0, 4, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 4, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 4, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 4, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 4, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 4, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 4, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 4, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 4, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 4, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 4, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 0, 5, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 5, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 5, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 5, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 5, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 5, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 5, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 5, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 5, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 5, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 5, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 0, 6, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 6, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 6, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 6, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 6, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 6, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 6, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 6, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 6, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 6, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 6, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 0, 7, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 7, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 7, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 7, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 7, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 7, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 7, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 7, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 7, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 7, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 7, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 0, 8, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 8, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 8, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 8, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 8, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 8, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 8, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 8, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 8, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 8, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 8, 0, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 0, 0, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 0, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 0, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 0, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 0, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 0, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 0, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 0, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 0, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 0, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 0, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 0, 1, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 1, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 1, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 1, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 1, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 1, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 1, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 1, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 1, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 1, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 1, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 0, 2, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 2, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 2, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 2, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 2, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 2, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 2, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 2, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 2, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 2, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 2, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 0, 3, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 3, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 3, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 3, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 3, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 3, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 3, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 3, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 3, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 3, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 3, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 0, 4, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 4, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 4, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 4, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 4, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 4, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 4, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 4, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 4, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 4, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 4, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 0, 5, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 5, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 5, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 5, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 5, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 5, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 5, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 5, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 5, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 5, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 5, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 0, 6, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 6, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 6, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 6, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 6, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 6, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 6, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 6, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 6, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 6, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 6, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 0, 7, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 7, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 7, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 7, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 7, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 7, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 7, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 7, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 7, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 7, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 7, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 0, 8, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 1, 8, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 2, 8, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 3, 8, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 4, 8, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 5, 8, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 6, 8, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 7, 8, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 8, 8, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 9, 8, 1, 0.0, 0.0, 1.0 ); ( 11, 1.0 | WING | WING_FFD, 10, 8, 1, 0.0, 0.0, 1.0 )

% ------------------------- INPUT/OUTPUT INFORMATION --------------------------%

MESH_FILENAME= ../mesh_FFD.su2

MESH_FORMAT= SU2
TABULAR_FORMAT= TECPLOT


GRAD_OBJFUNC_FILENAME= geo_gradient.dat
